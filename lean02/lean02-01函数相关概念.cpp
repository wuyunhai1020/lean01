//函数的学习涉及多个文件，不像之前lean01学习的基础知识一样可以用一个源文件来讲解完
//下面我们统合整理了黑马程序员c++与《c++ primer plus》中关于函数的基础知识与相关概念，询问了ds后，来简单讲解一下

//一.函数的相关概念
//1.函数的组成：函数头（funtion header）和函数体（functino body）
// 函数头就是告诉别人和机器这个函数的基本信息：输入什么，输出什么，叫什么名字。而函数体包含着具体代码，承担着函数具体功能实现的任务
// 如 int pow(int a,int b)就是个典型的函数头，pow是这个函数的名字，int a和int b（a和b可以省略）表示这个函数需要给他输入（或者说提供）两个整数型参数a和b，开头的int表示这个函数输出（或者说返回）一个整型数据。
// 如果函数没有返回值（这里可以简单理解成不输出一个数值只执行程序），就写 void 函数名（参数类型）
//看下面的案例：pow返回的就是一个整型数据。

#include<iostream>//i:input o:output stream:数据流
int pow1(int, int);//函数原型
int main1()
{
	int a=0;
	int b=0;
	int c = pow1(a, b);//调用了pow1函数
	std::cin >> a >> b;
	std::cout << a<<"的"<<b<<"次方为" << pow1(a, b) <<"\n";//调用了pow1函数
	
		system("pause");

	return 0;
}
//2.函数的样式:根据输入和输出，我们可以简单把函数分为四类：无参无返，有参无返，无参有返，有参有返
//参，也就是参数，代表着函数的输入值，函数可以没有输入，这很正常。返，也就是返回值，也可以简单理解成输出值，但不严谨。函数肯定是有输出的，只不过输出的可能是一些功能而非具体数值。如果输出了具体数值，我们就把这个值称为返回值
//下面我们来写一下pow1函数，它是典型的有参有返

//这部分是函数的定义
int pow1(int a, int b)
{
	int num = 1;
	for (int i = 1; i <= b; i++)
	{
		num *= a;
	}
	return num;//这个return后面接着的就是返回值
}

//3.函数的功能实现(c++中)
//函数是功能的封装，不是写好了丢那里就行了的，要告诉计算机它在哪，告诉计算机要使用某某函数，才可以发挥它的功能。
//简单来说，函数功能的实现分为三步：函数的声明（function Declaration），函数的定义(function Definition)和函数的调用(function call)。
//函数的调用就是直接使用他，比如上面直接令 int c = pow1(a,b)。
//函数的定义就是写函数的具体代码，决定其功能的实现，比如上面非绿代码的第二段，整段就是函数的定义
//函数的声明是什么呢？函数的声明就是告诉编译器，这个函数等下要用，你记得嗷。就像你看书一样。一路看下来，突然发现有个专业术语“编译”，啥玩意没学过啊，就会纠结，到处翻。如果提前告诉人家“编译”是什么意思，或者告诉人家“编译”的概念后面会具体介绍，就利于人家继续往下读
//函数的声明的实现方式大抵可以分为两种：函数的定义（没错，就相当于使用专业术语前先告诉别人这是什么）以及，函数原型（function prototype）
//函数原型：相当于使用专业术语前告诉别人，等下有个专业术语，你先别纠结它什么意思，后面我会补给你的（找给你的）。专业点来说，函数原型为编译器提供了一个函数接口。接口什么意思？我也不知道，意会意会吧

//以上面的非绿代码为例，那里是先用了函数原型，然后进行函数调用，最后补充函数定义。

//4.main函数：
//main函数就是典型的无参有返，所以它的括号里面是空的（也可以输入void）。返回值就是它屁股的return 0中的0.为什么main函数要返回个0呢？可以把电脑看成一个操作系统，main返回一个0代表无异常，返回非0就是有异常。

//5.文件功能：
//右边解决方案资源管理器里面，有头文件，源文件（我超，源）和资源文件。一般头文件用来写函数的声明（这样所有源文件都有得用了），然后有些源文件写函数定义，一个源文件执行主要功能，也就是定义main函数执行功能。这在大型项目中很重要
//头文件后缀一般是.h（或者没有），源文件后缀一般是.cpp